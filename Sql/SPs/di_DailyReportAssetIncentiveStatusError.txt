-- SQL Server Instance:  smg-sql01
USE [Utilities];
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND OBJECT_ID = OBJECT_ID('sl.di_DailyReportAssetIncentiveStatusError'))
   DROP PROC [sl].[di_DailyReportAssetIncentiveStatusError]
GO
CREATE PROCEDURE [sl].[di_DailyReportAssetIncentiveStatusError]
/* -----------------------------------------------------------------------------------------------------------
   Procedure Name  :  sl.di_DailyReportAssetIncentiveStatusError
   Business Analyis:
   Project/Process :   
   Description     :  Populate the DailyReportAssetIncentiveStatusError table.
	  
   Author          :  Philip Morrison 
   Create Date     :  08/25/2025

   ***********************************************************************************************************
   **         Change History                                                                                **
   ***********************************************************************************************************

   Date       Version    Author             Description
   --------   --------   -----------        ------------
   08/25/2025 1.01.001   Philip Morrison    Created

*/ -----------------------------------------------------------------------------------------------------------                                   

AS
BEGIN

-- This Instance Declarations
DECLARE @currentTimestamp [datetime] = null;
SET @currentTimestamp = getdate();

DECLARE @CurrentYear           [int] = 0;
SET @CurrentYear = DATEPART(year, getdate());

DECLARE @BaseLevelChecksAllPassed [bit] = 1;
DECLARE @NonCategoryGroupLevelChecksPassed [bit] = 1;
DECLARE @CategoryGroupLevelChecksPassed [bit] = 1;

DECLARE @HealthAssessmentPoints [int] = 0;
DECLARE @BiometricSubmittedPoints [int] = 0;
DECLARE @BloodPressurePoints [int] = 0;
DECLARE @WaistCircumferencePoints [int] = 0;
DECLARE @CholesterolRatioPoints [int] = 0;
DECLARE @TriglyceridePoints [int] = 0;
DECLARE @Hba1cPoints [int] = 0;
DECLARE @TobaccoFreePoints [int] = 0;
DECLARE @PreventativePoints [int] = 0;
DECLARE @CoursePoints [int] = 0;
DECLARE @CoachingCallPoints [int] = 0;
DECLARE @PhysicalActivityTrackingPoints [int] = 0;
DECLARE @AssetHealthChallengePoints [int] = 0;
DECLARE @SummitChallengePoints [int] = 0;
DECLARE @VirtaHealthPoints [int] = 0;
DECLARE @EventsPoints [int] = 0;
DECLARE @HingePoints [int] = 0;
DECLARE @HeadspacePoints [int] = 0;
DECLARE @SupportLincEapPoints [int] = 0;
DECLARE @HealthyLifestylePoints [int] = 0;
DECLARE @TotalHealthyTargetPoints [int] = 0;
DECLARE @PointTotal [int] = 0;
DECLARE @HealthyMeasuresAndLifestyleTargetsCategoryPoints  [int] = 0;
DECLARE @PortalActivitiesCategoryPoints [int] = 0;
DECLARE @WellnessChallengesCategoryPoints [int] = 0;
DECLARE @SummitHealthPlanEnrolleeOfferingsCategoryPoints [int] = 0;
DECLARE @EmotionalHealthActivitiesCategoryPoints [int] = 0;
DECLARE @SumOfHealthyLifestylePoints [int] = 0; 
DECLARE @SumOfAllCategoriesPoints [int] = 0; 


-- Template Declarations
DECLARE @Application            varchar(128) = 'Summit Life' 
DECLARE @Version                varchar(25)  = '1.00.001'

DECLARE @ProcessID              int          = 212
DECLARE @Process                varchar(128) = 'DailyReports'

DECLARE @BatchOutID             int
DECLARE @BatchDescription       varchar(1000) = @@ServerName + '  - ' + @Version
DECLARE @BatchDetailDescription varchar(1000)
DECLARE @BatchMessage           varchar(MAX)
DECLARE @User                   varchar(128) = SUSER_NAME()

DECLARE @AnticipatedRecordCount int 
DECLARE @ActualRecordCount      int


SET NOCOUNT ON

BEGIN TRY

--  Initialize Batch
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  NULL, 'BatchStart', @BatchDescription, @ProcessID, @Process
 ----------------------------------------------------------------------------------------------------------------------------------------------------

    SET @BatchDetailDescription = '010/290:  Truncate DailyReportAssetIncentiveStatusError'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
	  SELECT @AnticipatedRecordCount = COUNT(*)
	                                   FROM [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError];
	  
      -- Truncate DailyReportAssetIncentiveStatusError
      TRUNCATE TABLE [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError];
	
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------

    SET @BatchDetailDescription = '020/290:  Get base-level field values from AssetIncentivePointsStatus'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
    
	  SELECT @AnticipatedRecordCount = 1;
	  
      -- Get base-level field values from AssetIncentivePointsStatus
      SELECT 
         @HealthAssessmentPoints = [HealthAssessmentPoints]
         ,@BiometricSubmittedPoints = [BiometricSubmittedPoints]
         ,@BloodPressurePoints = [BloodPressurePoints]
         ,@WaistCircumferencePoints = [WaistCircumferencePoints]
         ,@CholesterolRatioPoints = [CholesterolRatioPoints]
         ,@TriglyceridePoints = [TriglyceridePoints]
         ,@Hba1cPoints = [Hba1cPoints]
         ,@TobaccoFreePoints = [TobaccoFreePoints]
         ,@PreventativePoints = [PreventativePoints]
         ,@CoursePoints = [CoursePoints]
         ,@CoachingCallPoints = [CoachingCallPoints]
         ,@PhysicalActivityTrackingPoints = [PhysicalActivityTrackingPoints]
         ,@AssetHealthChallengePoints = [AssetHealthChallengePoints]
         ,@SummitChallengePoints = [SummitChallengePoints]
         ,@VirtaHealthPoints = [VirtaHealthPoints]
         ,@EventsPoints = [EventsPoints]
         ,@HingePoints = [HingePoints]
         ,@HeadspacePoints = [HeadspacePoints]
         ,@SupportLincEapPoints = [SupportLincEapPoints]
         ,@HealthyLifestylePoints = [HealthyLifestylePoints]
         ,@TotalHealthyTargetPoints = [TotalHealthyTargetPoints]
         ,@PointTotal = [PointTotal]
      FROM [DS_SummitLife].[dbo].[AssetIncentivePointsStatus];
	
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------
    SET @BatchDetailDescription = '030/290:  Base-Level Check:  HealthAssessmentPoints - 0 or 100'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
    -- Base-Level Check:  HealthAssessmentPoints - 0 or 100
    IF (@HealthAssessmentPoints <> 0 AND @HealthAssessmentPoints <> 100) BEGIN
    
      SELECT @AnticipatedRecordCount = 1;
      
      INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
      (
        [ErrorMessage]
        ,[DataGatheredOnTimestamp]
      )
      VALUES
      (
        'HealthAssessmentPoints has an invalid value, ' + CONVERT([nvarchar] (10), @HealthAssessmentPoints) + '.  HealthAssessmentPoints must be either 0 or 100.'
        ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
      );
      
      -- BaseLevel Check Failure
      SET @BaseLevelChecksAllPassed = 0;
      
    END
	
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------
    SET @BatchDetailDescription = '040/290:  Base-Level Check:  BiometricSubmittedPoints - 0 or 100'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
    -- Base-Level Check:  BiometricSubmittedPoints - 0 or 100
    IF (@BiometricSubmittedPoints <> 0 AND @BiometricSubmittedPoints <> 100) BEGIN
    
      SELECT @AnticipatedRecordCount = 1;
      
      INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
      (
        [ErrorMessage]
        ,[DataGatheredOnTimestamp]
      )
      VALUES
      (
        'BiometricSubmittedPoints has an invalid value, ' + CONVERT([nvarchar] (10), @BiometricSubmittedPoints) + '.  BiometricSubmittedPoints must be either 0 or 100.'
        ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
      );

      -- BaseLevel Check Failure
      SET @BaseLevelChecksAllPassed = 0;
      
    END
	
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------
    SET @BatchDetailDescription = '050/290:  Base-Level Check:  BloodPressurePoints - 0 or 25'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
    -- Base-Level Check:  BloodPressurePoints - 0 or 25
    IF (@BloodPressurePoints <> 0 AND @BloodPressurePoints <> 25) BEGIN
    
      SELECT @AnticipatedRecordCount = 1;
      
      INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
      (
        [ErrorMessage]
        ,[DataGatheredOnTimestamp]
      )
      VALUES
      (
        'BloodPressurePoints has an invalid value, ' + CONVERT([nvarchar] (10), @BloodPressurePoints) + '.  BloodPressurePoints must be either 0 or 25.'
        ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
      );

      -- BaseLevel Check Failure
      SET @BaseLevelChecksAllPassed = 0;
      
    END
	
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------
    SET @BatchDetailDescription = '060/290:  Base-Level Check:  WaistCircumferencePoints - 0 or 25'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
    -- Base-Level Check:  WaistCircumferencePoints - 0 or 25
    IF (@WaistCircumferencePoints <> 0 AND @WaistCircumferencePoints <> 25) BEGIN
    
      SELECT @AnticipatedRecordCount = 1;
      
      INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
      (
        [ErrorMessage]
        ,[DataGatheredOnTimestamp]
      )
      VALUES
      (
        'WaistCircumferencePoints has an invalid value, ' + CONVERT([nvarchar] (10), @WaistCircumferencePoints) + '.  WaistCircumferencePoints must be either 0 or 25.'
        ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
      );

      -- BaseLevel Check Failure
      SET @BaseLevelChecksAllPassed = 0;
      
    END
	
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------
    SET @BatchDetailDescription = '070/290:  Base-Level Check:  CholesterolRatioPoints - 0 or 25'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
    -- Base-Level Check:  CholesterolRatioPoints - 0 or 25
    IF (@CholesterolRatioPoints <> 0 AND @CholesterolRatioPoints <> 25) BEGIN
    
      SELECT @AnticipatedRecordCount = 1;
      
      INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
      (
        [ErrorMessage]
        ,[DataGatheredOnTimestamp]
      )
      VALUES
      (
        'CholesterolRatioPoints has an invalid value, ' + CONVERT([nvarchar] (10), @CholesterolRatioPoints) + '.  CholesterolRatioPoints must be either 0 or 25.'
        ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
      );

      -- BaseLevel Check Failure
      SET @BaseLevelChecksAllPassed = 0;
      
    END
	
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------
    SET @BatchDetailDescription = '080/290:  Base-Level Check:  TriglyceridePoints - 0 or 25'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
    -- Base-Level Check:  TriglyceridePoints - 0 or 25
    IF (@TriglyceridePoints <> 0 AND @TriglyceridePoints <> 25) BEGIN
    
      SELECT @AnticipatedRecordCount = 1;
      
      INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
      (
        [ErrorMessage]
        ,[DataGatheredOnTimestamp]
      )
      VALUES
      (
        'TriglyceridePoints has an invalid value, ' + CONVERT([nvarchar] (10), @TriglyceridePoints) + '.  TriglyceridePoints must be either 0 or 25.'
        ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
      );

      -- BaseLevel Check Failure
      SET @BaseLevelChecksAllPassed = 0;
      
    END
	
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------
    SET @BatchDetailDescription = '090/290:  Base-Level Check: Hba1cPoints - 0 or 25'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
    -- Base-Level Check:  Hba1cPoints - 0 or 25
    IF (@Hba1cPoints <> 0 AND @Hba1cPoints <> 25) BEGIN
    
      SELECT @AnticipatedRecordCount = 1;
      
      INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
      (
        [ErrorMessage]
        ,[DataGatheredOnTimestamp]
      )
      VALUES
      (
        'Hba1cPoints has an invalid value, ' + CONVERT([nvarchar] (10), @Hba1cPoints) + '.  Hba1cPoints must be either 0 or 25.'
        ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
      );
      
      -- BaseLevel Check Failure
      SET @BaseLevelChecksAllPassed = 0;
      
    END
	
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------
    SET @BatchDetailDescription = '100/290:  Base-Level Check: TobaccoFreePoints - 0 or 25'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
    -- Base-Level Check: TobaccoFreePoints - 0 or 25
    IF (@TobaccoFreePoints <> 0 AND @TobaccoFreePoints <> 25) BEGIN
    
      SELECT @AnticipatedRecordCount = 1;
      
      INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
      (
        [ErrorMessage]
        ,[DataGatheredOnTimestamp]
      )
      VALUES
      (
        'TobaccoFreePoints has an invalid value, ' + CONVERT([nvarchar] (10), @TobaccoFreePoints) + '.  TobaccoFreePoints must be either 0 or 25.'
        ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
      );

      -- BaseLevel Check Failure
      SET @BaseLevelChecksAllPassed = 0;
      
    END
	
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------
    SET @BatchDetailDescription = '110/290:  Base-Level Check PreventativePoints - multiple of 25, max of 150'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
    -- Base-Level Check PreventativePoints - multiple of 25, max of 150
    IF (@PreventativePoints > 150) BEGIN
    
         SELECT @AnticipatedRecordCount = 1;
      
         INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
         (
            [ErrorMessage]
            ,[DataGatheredOnTimestamp]
         )
         VALUES
         (
            'PreventativePoints value, ' + CONVERT([nvarchar] (10), @PreventativePoints) + ',  exceeds the maximum of 150.'
            ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
         );


      -- BaseLevel Check Failure
      SET @BaseLevelChecksAllPassed = 0;

    END
    ELSE BEGIN
       IF ((@PreventativePoints % 25) <> 0) BEGIN
    
         SELECT @AnticipatedRecordCount = 1;
      
         INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
         (
            [ErrorMessage]
            ,[DataGatheredOnTimestamp]
         )
         VALUES
         (
           'PreventativePoints has an invalid value, ' + CONVERT([nvarchar] (10), @PreventativePoints) + '.  PreventativePoints must be a multiple of 25.'
            ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
         );
      

         -- BaseLevel Check Failure
         SET @BaseLevelChecksAllPassed = 0;
      
       END
	END
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------
    SET @BatchDetailDescription = '120/290:  Base-Level Check CoursePoints - multiple of 10, max of 150'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
    -- Base-Level Check CoursePoints - multiple of 10, max of 150
    IF (@CoursePoints > 150) BEGIN
       SELECT @AnticipatedRecordCount = 1;
      
       INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
       (
         [ErrorMessage]
         ,[DataGatheredOnTimestamp]
       )
       VALUES
       (
         'CoursePoints value, ' + CONVERT([nvarchar] (10), @CoursePoints) + ',  exceeds the maximum of 150.'
         ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
       );

       -- BaseLevel Check Failure
       SET @BaseLevelChecksAllPassed = 0;
      
    END
    ELSE BEGIN
       IF ((@CoursePoints % 10) <> 0) BEGIN
    
         SELECT @AnticipatedRecordCount = 1;
      
         INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
         (
            [ErrorMessage]
            ,[DataGatheredOnTimestamp]
         )
         VALUES
         (
           'CoursePoints has an invalid value, ' + CONVERT([nvarchar] (10), @CoursePoints) + '.  CoursePoints must be a multiple of 10.'
           ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
         );

         -- BaseLevel Check Failure
         SET @BaseLevelChecksAllPassed = 0;
       END
	END
    
    
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------
    SET @BatchDetailDescription = '130/290:  Base-Level CoachingCallPoints - 0 or 50 '
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
    -- Base-Level Check CoachingCallPoints - 0 or 50 
    IF (@CoachingCallPoints <> 0 AND @CoachingCallPoints <> 50) BEGIN
        SELECT @AnticipatedRecordCount = 1;
      
         INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
         (
            [ErrorMessage]
            ,[DataGatheredOnTimestamp]
         )
         VALUES
         (
            'CoachingCallPoints value, ' + CONVERT([nvarchar] (10), @CoachingCallPoints) + ',  CoachingCallPoints must be 0 or 50.'
            ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
         );

       -- BaseLevel Check Failure
       SET @BaseLevelChecksAllPassed = 0;

    END
    
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------
    SET @BatchDetailDescription = '140/290:  Base-Level PhysicalActivityTrackingPoints - multiple of 100, max of 200'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
   -- Base-Level Check PhysicalActivityTrackingPoints - multiple of 100, max of 200
    IF (@PhysicalActivityTrackingPoints > 200) BEGIN
       SELECT @AnticipatedRecordCount = 1;
      
       INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
       (
         [ErrorMessage]
         ,[DataGatheredOnTimestamp]
       )
       VALUES
       (
         'PhysicalActivityTrackingPoints value, ' + CONVERT([nvarchar] (10), @PhysicalActivityTrackingPoints) + ',  exceeds the maximum of 200.'
         ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
       );

       -- BaseLevel Check Failure
       SET @BaseLevelChecksAllPassed = 0;

    END
    ELSE BEGIN
       IF ((@PhysicalActivityTrackingPoints % 100) <> 0) BEGIN
    
         SELECT @AnticipatedRecordCount = 1;
      
         INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
         (
            [ErrorMessage]
            ,[DataGatheredOnTimestamp]
         )
         VALUES
         (
           'PhysicalActivityTrackingPoints has an invalid value, ' + CONVERT([nvarchar] (10), @PhysicalActivityTrackingPoints) + '.  PhysicalActivityTrackingPoints must be a multiple of 100.'
            ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
         );

         -- BaseLevel Check Failure
         SET @BaseLevelChecksAllPassed = 0;
      
       END
	END
    
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------
    SET @BatchDetailDescription = '150/290:  Base-Level AssetHealthChallengePoints - multiple of 20, max of 100'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
   -- Base-Level Check AssetHealthChallengePoints - multiple of 20, max of 100
    IF (@AssetHealthChallengePoints > 100) BEGIN
       SELECT @AnticipatedRecordCount = 1;
      
       INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
       (
         [ErrorMessage]
         ,[DataGatheredOnTimestamp]
       )
       VALUES
       (
         'AssetHealthChallengePoints value, ' + CONVERT([nvarchar] (10), @AssetHealthChallengePoints) + ',  exceeds the maximum of 100.'
         ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
       );

       -- BaseLevel Check Failure
       SET @BaseLevelChecksAllPassed = 0;

    END
    ELSE BEGIN
       IF ((@AssetHealthChallengePoints % 20) <> 0) BEGIN
    
         SELECT @AnticipatedRecordCount = 1;
      
         INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
         (
            [ErrorMessage]
            ,[DataGatheredOnTimestamp]
         )
         VALUES
         (
           'AssetHealthChallengePoints has an invalid value, ' + CONVERT([nvarchar] (10), @AssetHealthChallengePoints) + '.  AssetHealthChallengePoints must be a multiple of 20.'
            ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
         );

         -- BaseLevel Check Failure
         SET @BaseLevelChecksAllPassed = 0;
      
       END
	END
    
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------
    SET @BatchDetailDescription = '160/290:  Base-Level Check SummitChallengePoints - multiple of 20, max of 100'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
   -- Base-Level Check SummitChallengePoints - multiple of 20, max of 100
    IF (@SummitChallengePoints > 100) BEGIN
       SELECT @AnticipatedRecordCount = 1;
      
       INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
       (
         [ErrorMessage]
         ,[DataGatheredOnTimestamp]
       )
       VALUES
       (
         'SummitChallengePoints value, ' + CONVERT([nvarchar] (10), @SummitChallengePoints) + ',  exceeds the maximum of 100.'
         ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
       );

       -- BaseLevel Check Failure
       SET @BaseLevelChecksAllPassed = 0;

    END
    ELSE BEGIN
       IF ((@SummitChallengePoints % 20) <> 0) BEGIN
    
         SELECT @AnticipatedRecordCount = 1;
      
         INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
         (
            [ErrorMessage]
            ,[DataGatheredOnTimestamp]
         )
         VALUES
         (
           'SummitChallengePoints has an invalid value, ' + CONVERT([nvarchar] (10), @SummitChallengePoints) + '.  SummitChallengePoints must be a multiple of 20.'
            ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
         );

         -- BaseLevel Check Failure
         SET @BaseLevelChecksAllPassed = 0;
       END
	END
    
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------
    SET @BatchDetailDescription = '170/290:  Base-Level Check VirtaHealthPoints - 0, 50, or 100'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
    -- Base-Level Check VirtaHealthPoints - 0, 50, or 100
    IF (@VirtaHealthPoints <> 0 AND @VirtaHealthPoints <> 50 AND @VirtaHealthPoints <> 100) BEGIN
       SELECT @AnticipatedRecordCount = 1;
      
       INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
       (
         [ErrorMessage]
         ,[DataGatheredOnTimestamp]
       )
       VALUES
       (
         'VirtaHealthPoints value, ' + CONVERT([nvarchar] (10), @VirtaHealthPoints) + ',  is invalid.  VirtaHealthPoints value must be 0, 50, or 100.'
         ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
       );

       -- BaseLevel Check Failure
       SET @BaseLevelChecksAllPassed = 0;

    END
    
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------
    SET @BatchDetailDescription = '180/290:  Base-Level Check EventsPoints - multiple of 20, max of 100'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
   -- Base-Level Check EventsPoints - multiple of 20, max of 100
    IF (@EventsPoints > 100) BEGIN
       SELECT @AnticipatedRecordCount = 1;
      
       INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
       (
         [ErrorMessage]
         ,[DataGatheredOnTimestamp]
       )
       VALUES
       (
         'EventsPoints value, ' + CONVERT([nvarchar] (10), @EventsPoints) + ',  exceeds the maximum of 100.'
         ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
       );

       -- BaseLevel Check Failure
       SET @BaseLevelChecksAllPassed = 0;

    END
    ELSE BEGIN
       IF ((@EventsPoints % 20) <> 0) BEGIN
    
         SELECT @AnticipatedRecordCount = 1;
      
         INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
         (
            [ErrorMessage]
            ,[DataGatheredOnTimestamp]
         )
         VALUES
         (
           'EventsPoints has an invalid value, ' + CONVERT([nvarchar] (10), @EventsPoints) + '.  EventsPoints must be a multiple of 20.'
           ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
         );

         -- BaseLevel Check Failure
         SET @BaseLevelChecksAllPassed = 0;
      
       END
	END
    
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------
    SET @BatchDetailDescription = '190/290:  Base-Level Check HingePoints - 0, 5, 15, 20, 25, or 40'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
    -- Base-Level Check HingePoints - 0, 5, 15, 20, 25, or 40
    IF (@HingePoints <> 0 AND @HingePoints <> 5 AND @HingePoints <> 15 AND @HingePoints <> 20 AND @HingePoints <> 25 AND @HingePoints <> 40) BEGIN
       SELECT @AnticipatedRecordCount = 1;
      
       INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
       (
         [ErrorMessage]
         ,[DataGatheredOnTimestamp]
       )
       VALUES
       (
         'HingePoints value, ' + CONVERT([nvarchar] (10), @HingePoints) + ',  is invalid.  HingePoints value must be  0, 5, 15, 20, 25, or 40.'
         ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
       );

       -- BaseLevel Check Failure
       SET @BaseLevelChecksAllPassed = 0;

    END
    
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------
    SET @BatchDetailDescription = '200/290:  Base-Level Check HeadspacePoints - multiple of 5, max 100'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
    -- Base-Level Check HeadspacePoints - multiple of 5, max of 100
    IF (@HeadspacePoints > 100) BEGIN
       SELECT @AnticipatedRecordCount = 1;
      
       INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
       (
         [ErrorMessage]
         ,[DataGatheredOnTimestamp]
       )
       VALUES
       (
         'HeadspacePoints value, ' + CONVERT([nvarchar] (10), @HeadspacePoints) + ',  exceeds the maximum of 100.'
         ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
       );

       -- BaseLevel Check Failure
       SET @BaseLevelChecksAllPassed = 0;

    END
    ELSE BEGIN
       IF ((@HeadspacePoints % 5) <> 0) BEGIN
    
         SELECT @AnticipatedRecordCount = 1;
      
         INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
         (
            [ErrorMessage]
            ,[DataGatheredOnTimestamp]
         )
         VALUES
         (
           'HeadspacePoints has an invalid value, ' + CONVERT([nvarchar] (10), @HeadspacePoints) + '.  HeadspacePoints must be a multiple of 5.'
           ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
         );


         -- BaseLevel Check Failure
         SET @BaseLevelChecksAllPassed = 0;
      
       END
	END
    
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------
    SET @BatchDetailDescription = '210/290:  SupportLincEapPoints - multiple of 5, max 100'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
    -- Base-Level Check SupportLincEapPoints - multiple of 5, max 100
    IF (@SupportLincEapPoints > 100) BEGIN
       SELECT @AnticipatedRecordCount = 1;
      
       INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
       (
         [ErrorMessage]
         ,[DataGatheredOnTimestamp]
       )
       VALUES
       (
         'SupportLincEapPoints value, ' + CONVERT([nvarchar] (10), @SupportLincEapPoints) + ',  exceeds the maximum of 100.'
         ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
       );

       -- BaseLevel Check Failure
       SET @BaseLevelChecksAllPassed = 0;

    END
    ELSE BEGIN
       IF ((@SupportLincEapPoints % 5) <> 0) BEGIN
    
         SELECT @AnticipatedRecordCount = 1;
      
         INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
         (
            [ErrorMessage]
            ,[DataGatheredOnTimestamp]
         )
         VALUES
         (
           'SupportLincEapPoints has an invalid value, ' + CONVERT([nvarchar] (10), @SupportLincEapPoints) + '.  SupportLincEapPoints must be a multiple of 5.'
           ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
         );

         -- BaseLevel Check Failure
         SET @BaseLevelChecksAllPassed = 0;
      
       END
	END
    
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------
    SET @BatchDetailDescription = '220/290:  Base-Level Check HealthyLifestylePoints - 0, 25, 50, or 75'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
    -- Base-Level Check HealthyLifestylePoints - 0, 25, 50, or 75
    IF (@HealthyLifestylePoints <> 0 AND @HealthyLifestylePoints <> 25 AND @HealthyLifestylePoints <> 50 AND @HealthyLifestylePoints <> 75) BEGIN
       SELECT @AnticipatedRecordCount = 1;
      
       INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
       (
         [ErrorMessage]
         ,[DataGatheredOnTimestamp]
       )
       VALUES
       (
         'HealthyLifestylePoints value, ' + CONVERT([nvarchar] (10), @HealthyLifestylePoints) + ', is invalid.  HealthyLifestylePoints must be 0, 25, 50, or 75.'
         ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
       );

       -- BaseLevel Check Failure
       SET @BaseLevelChecksAllPassed = 0;

    END
    
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------
IF (@BaseLevelChecksAllPassed = 1) BEGIN

  SET @NonCategoryGroupLevelChecksPassed = 1;
  SET @SumOfHealthyLifestylePoints = 
     @BloodPressurePoints +
     @WaistCircumferencePoints +
     @CholesterolRatioPoints +
     @TriglyceridePoints +
     @Hba1cPoints;
----------------------------------------------------------------------------------------------------------------------------------------------------
    SET @BatchDetailDescription = '230/290:  NonCategoryGroupLevelCheck @SumOfHealthyLifestylePoints <> @TotalHealthyTargetPoints'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
    -- NonCategoryGroupLevelCheck @SumOfHealthyLifestylePoints <> @TotalHealthyTargetPoints'
    IF (@SumOfHealthyLifestylePoints <> @TotalHealthyTargetPoints) BEGIN
       SELECT @AnticipatedRecordCount = 1;
      
       INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
       (
         [ErrorMessage]
         ,[DataGatheredOnTimestamp]
       )
       VALUES
       (
         'The sum of BloodPressurePoints, WaistCircumferencePoints, CholesterolRatioPoints, TriglyceridePoints, and Hba1cPoints ' + CONVERT([nvarchar] (10), @SumOfHealthyLifestylePoints) + ' does not equal the TotalHealthyTargetPoints from the Asset Incentive Status Report, ' + CONVERT([nvarchar] (10), @TotalHealthyTargetPoints) 
         ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
       );

       -- Non-Category Group Level Check Failure
       SET @NonCategoryGroupLevelChecksPassed = 0;

    END
    ELSE BEGIN
       IF (@SumOfHealthyLifestylePoints > 125) BEGIN
          SELECT @AnticipatedRecordCount = 1;
      
          INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
          (
            [ErrorMessage]
            ,[DataGatheredOnTimestamp]
          )
          VALUES
          (
            'The sum of BloodPressurePoints, WaistCircumferencePoints, CholesterolRatioPoints, TriglyceridePoints, and Hba1cPoints ' + CONVERT([nvarchar] (10), @SumOfHealthyLifestylePoints) + ' exceeds the maximum value of 125.'
            ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
          );

          -- Non-Category Group Level Check Failure
          SET @NonCategoryGroupLevelChecksPassed = 0;
       END
    END
    
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------

IF (@NonCategoryGroupLevelChecksPassed = 1) BEGIN
  
  SET @CategoryGroupLevelChecksPassed = 1;
  
  SET @HealthyMeasuresAndLifestyleTargetsCategoryPoints = 
       @HealthAssessmentPoints +
       @BiometricSubmittedPoints +
       @BloodPressurePoints +
       @WaistCircumferencePoints +
       @CholesterolRatioPoints +
       @TriglyceridePoints +
       @Hba1cPoints +
       @TobaccoFreePoints;
----------------------------------------------------------------------------------------------------------------------------------------------------
    SET @BatchDetailDescription = '240/290:  CategoryGroupLevelCheck HealthyMeasuresAndLifestyleTargetsCategoryPoints > 325'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
    -- CategoryGroupLevelCheck HealthyMeasuresAndLifestyleTargetsCategoryPoints > 325
    IF (@HealthyMeasuresAndLifestyleTargetsCategoryPoints > 325) BEGIN
       SELECT @AnticipatedRecordCount = 1;
      
       INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
       (
         [ErrorMessage]
         ,[DataGatheredOnTimestamp]
       )
       VALUES
       (
         'The HealthyMeasuresAndLifestyleTargetsCategoryPoints, the sum of HealthAssessmentPoints, BiometricSubmittedPoints, BloodPressurePoints, WaistCircumferencePoints, CholesterolRatioPoints, TriglyceridePoints, Hba1cPoints, and TobaccoFreePoints, ' + CONVERT([nvarchar] (10), @HealthyMeasuresAndLifestyleTargetsCategoryPoints) + ', exceeds the maximum of 325.'
         ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
       );

       -- Category Group Level Check Failure
       SET @CategoryGroupLevelChecksPassed = 0;

    END
    
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------
  
  SET @PortalActivitiesCategoryPoints =
       @CoursePoints +
       @CoachingCallPoints;
       
----------------------------------------------------------------------------------------------------------------------------------------------------
    SET @BatchDetailDescription = '250/290:  CategoryGroupLevelCheck PortalActivitiesCategoryPoints > 150'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
    -- CategoryGroupLevelCheck PortalActivitiesCategoryPoints > 150
    IF (@PortalActivitiesCategoryPoints > 150) BEGIN
       SELECT @AnticipatedRecordCount = 1;
      
       INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
       (
         [ErrorMessage]
         ,[DataGatheredOnTimestamp]
       )
       VALUES
       (
         'PortalActivitiesCategoryPoints, the sum of CoursePoints and CoachingCallPoints, ' + CONVERT([nvarchar] (10), @PortalActivitiesCategoryPoints) + ', exceeds the maximum of 150.'
         ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
       );

       -- Category Group Level Check Failure
       SET @CategoryGroupLevelChecksPassed = 0;

    END
    
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------

  SET @WellnessChallengesCategoryPoints =
      @AssetHealthChallengePoints +
      @SummitChallengePoints;

----------------------------------------------------------------------------------------------------------------------------------------------------
    SET @BatchDetailDescription = '260/290:  CategoryGroupLevelCheck WellnessChallengesCategoryPoints > 100'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
    -- CategoryGroupLevelCheck WellnessChallengesCategoryPoints > 100
    IF (@WellnessChallengesCategoryPoints > 100) BEGIN
       SELECT @AnticipatedRecordCount = 1;
      
       INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
       (
         [ErrorMessage]
         ,[DataGatheredOnTimestamp]
       )
       VALUES
       (
         'The WellnessChallengesCategoryPoints, the sum of AssetHealthChallengePoints and SummitChallengePoints, ' + CONVERT([nvarchar] (10), @WellnessChallengesCategoryPoints) + ', exceeds the maximum of 100.'
         ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
       );

       -- Category Group Level Check Failure
       SET @CategoryGroupLevelChecksPassed = 0;

    END
    
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------

      
  SET @SummitHealthPlanEnrolleeOfferingsCategoryPoints =
       @VirtaHealthPoints +
       @HingePoints;
----------------------------------------------------------------------------------------------------------------------------------------------------
    SET @BatchDetailDescription = '270/290:  CategoryGroupLevelCheck SummitHealthPlanEnrolleeOfferingsCategoryPoints > 140'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
    -- CategoryGroupLevelCheck SummitHealthPlanEnrolleeOfferingsCategoryPoints > 140
    IF (@SummitHealthPlanEnrolleeOfferingsCategoryPoints > 140) BEGIN
       SELECT @AnticipatedRecordCount = 1;
      
       INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
       (
         [ErrorMessage]
         ,[DataGatheredOnTimestamp]
       )
       VALUES
       (
         'The SummitHealthPlanEnrolleeOfferingsCategoryPoints, the sum of VirtaHealthPoints and HingePoints, ' + CONVERT([nvarchar] (10), @SummitHealthPlanEnrolleeOfferingsCategoryPoints) + ' exceeds the maximum of 140.'
         ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
       );

       -- Category Group Level Check Failure
       SET @CategoryGroupLevelChecksPassed = 0;

    END
    
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------
       
  SET @EmotionalHealthActivitiesCategoryPoints =
      @HeadspacePoints +
      @SupportLincEapPoints;    
       
----------------------------------------------------------------------------------------------------------------------------------------------------
    SET @BatchDetailDescription = '280/290:  CategoryGroupLevelCheck EmotionalHealthActivitiesCategoryPoints > 100'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
    -- CategoryGroupLevelCheck EmotionalHealthActivitiesCategoryPoints > 100
    IF (@EmotionalHealthActivitiesCategoryPoints > 100) BEGIN
       SELECT @AnticipatedRecordCount = 1;
      
       INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
       (
         [ErrorMessage]
         ,[DataGatheredOnTimestamp]
       )
       VALUES
       (
         'The EmotionalHealthActivitiesCategoryPoints, the sum of HeadspacePoints and SupportLincEapPoints, ' + CONVERT([nvarchar] (10), @EmotionalHealthActivitiesCategoryPoints) + ' exceeds the maximum of 100.'
         ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
       );

       -- Category Group Level Check Failure
       SET @CategoryGroupLevelChecksPassed = 0;

    END
    
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------
    IF (@CategoryGroupLevelChecksPassed = 1) BEGIN
      SET @SumOfAllCategoriesPoints = 
         @HealthyMeasuresAndLifestyleTargetsCategoryPoints +
         @PortalActivitiesCategoryPoints +
         @WellnessChallengesCategoryPoints +
         @SummitHealthPlanEnrolleeOfferingsCategoryPoints +
         @EmotionalHealthActivitiesCategoryPoints;       
----------------------------------------------------------------------------------------------------------------------------------------------------
    SET @BatchDetailDescription = '290/290:  SumOfAllCategoriesPoints <> PointTotal'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
    -- CategoryGroupLevelCheck SumOfAllCategoriesPoints <> PointTotal
    IF (@SumOfAllCategoriesPoints <> @PointTotal) BEGIN
       SELECT @AnticipatedRecordCount = 1;
      
       INSERT INTO [DS_SummitLife].[dbo].[DailyReportAssetIncentiveStatusError]
       (
         [ErrorMessage]
         ,[DataGatheredOnTimestamp]
       )
       VALUES
       (
         'The sum of all points categories, ' + CONVERT([nvarchar] (10), @SumOfAllCategoriesPoints) + ' does not equal PointTotal from the Asset Incentive Points Status Report, ' + CONVERT([nvarchar] (10), @PointTotal) + '.'
         ,CONVERT([nvarchar] (50), @currentTimestamp, 121)
       );

       -- Category Group Level Check Failure
       SET @CategoryGroupLevelChecksPassed = 0;

    END
    
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------
         
    END
END
END




--  Close batch
    EXEC Admin.Utilities.logs.di_batch @BatchOutID OUTPUT, @BatchOutID, 'BatchEnd'
END TRY

BEGIN CATCH
DECLARE @Err              int
     ,  @ErrorMessage     varchar(Max)
     ,  @ErrorLine        varchar(128)
     ,  @Workstation      varchar(128) = @Application
     ,  @Procedure        VARCHAR(500)

    IF ERROR_NUMBER() IS NULL 
      SET @Err =0;
    ELSE
      SET @Err = ERROR_NUMBER();

    SET @ErrorMessage = ERROR_MESSAGE()
    SET @ErrorLine    = 'SP Line Number: ' + CAST(ERROR_LINE() as varchar(10)) 
    
	SET @Workstation  = HOST_NAME()
	
    SET @Procedure    = @@SERVERNAME + '.' + DB_NAME() + '.' + OBJECT_SCHEMA_NAME(@@ProcID) + '.' + OBJECT_NAME(@@ProcID) + ' - ' + @ErrorLine + ' - ' + LEFT(@BatchDetailDescription, 7)
    EXEC Admin.Utilities.administration.di_ErrorLog  @Application ,@Process, @Version ,0, @ErrorMessage, @Procedure,  @User , @Workstation

    SET @BatchMessage = 'Process Failed:  ' +  @ErrorMessage
    EXEC Admin.Utilities.logs.di_batch @BatchOutID OUTPUT, @BatchOutID, 'BatchEnd', @BatchMessage
	
    RAISERROR(@ErrorMessage, 16,1)

END CATCH


END