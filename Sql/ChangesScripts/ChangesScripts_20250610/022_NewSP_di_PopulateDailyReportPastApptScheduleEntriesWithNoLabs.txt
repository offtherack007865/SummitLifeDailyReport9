-- SQL Server Instance:  smg-sql01
USE [Utilities];
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND OBJECT_ID = OBJECT_ID('sl.di_PopulateDailyReportPastApptScheduleEntriesWithNoLabs'))
   DROP PROC [sl].[di_PopulateDailyReportPastApptScheduleEntriesWithNoLabs]
GO
CREATE PROCEDURE [sl].[di_PopulateDailyReportPastApptScheduleEntriesWithNoLabs]
/* -----------------------------------------------------------------------------------------------------------
   Procedure Name  :  sl.di_PopulateDailyReportPastApptScheduleEntriesWithNoLabs
   Business Analyis:
   Project/Process :   
   Description     :  Populate the DailyReportPastApptScheduleEntriesWithNoLabs table.
	  
   Author          :  Philip Morrison 
   Create Date     :  04/29/2025

   ***********************************************************************************************************
   **         Change History                                                                                **
   ***********************************************************************************************************

   Date       Version    Author             Description
   --------   --------   -----------        ------------
   04/29/2025 1.01.001   Philip Morrison    Created
   6/9/2025   1.01.002   Philip Morrison    Standards Corrections

*/ -----------------------------------------------------------------------------------------------------------                                   

AS
BEGIN

-- This Instance Declarations
DECLARE @CurrentYear [int] = 0
DECLARE @CurrentTimeStamp [datetime]

SET @CurrentTimeStamp = getdate()
SET @CurrentYear = DATEPART(year, getdate());

-- Template Declarations
DECLARE @Application            varchar(128) = 'Summit Life' 
DECLARE @Version                varchar(25)  = '1.00.002'

DECLARE @ProcessID              int          = 212
DECLARE @Process                varchar(128) = 'DailyReports'

DECLARE @BatchOutID             int
DECLARE @BatchDescription       varchar(1000) = @@ServerName + '  - ' + @Version
DECLARE @BatchDetailDescription varchar(1000)
DECLARE @BatchMessage           varchar(MAX)
DECLARE @User                   varchar(128) = SUSER_NAME()

DECLARE @AnticipatedRecordCount int 
DECLARE @ActualRecordCount      int




SET NOCOUNT ON

BEGIN TRY

--  Initialize Batch
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  NULL, 'BatchStart', @BatchDescription, @ProcessID, @Process
 ----------------------------------------------------------------------------------------------------------------------------------------------------

    SET @BatchDetailDescription = '010/020:  Truncate DailyReportPastApptScheduleEntriesWithNoLabs'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
	  SELECT @AnticipatedRecordCount = COUNT(*)
	                                   FROM [DS_SummitLife].[dbo].[DailyReportPastApptScheduleEntriesWithNoLabs];
	  
    -- Truncate Truncate DailyReportPastApptScheduleEntriesWithNoLabs
    TRUNCATE TABLE [DS_SummitLife].[dbo].[DailyReportPastApptScheduleEntriesWithNoLabs];
	
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------


    SET @BatchDetailDescription = '020/020:  Insert into DailyReportPastApptScheduleEntriesWithNoLabs'
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailStart', @BatchDetailDescription
	
    SELECT @AnticipatedRecordCount = COUNT(*)
                                      FROM [DS_SummitLife].[dbo].[SummitLifeEmployeeBiometricsAppointmentSchedule8_Appt] s
	                                       JOIN [DS_SummitLife].[dbo].[CombineLabAndBiometrics] b
	                                         ON b.[EmployeeNumber] = s.[id]
                                               JOIN [DS_SummitLife].[dbo].[SL_AllEmployees] e
	                                             ON e.[EmployeeNumber] = b.[EmployeeNumber]
                                     WHERE DATEPART(year, s.[AppointmentStartTimestamp]) = @CurrentYear
	                                   AND s.[AppointmentStartTimestamp] < @CurrentTimeStamp 
	                                   AND DATEPART(year, CONVERT([datetime],b.[BiometricScreenDate], 101)) = @CurrentYear
	                                   AND CONVERT([datetime],b.[BiometricScreenDate], 101) > s.[AppointmentStartTimestamp]
	                                   AND LEN (b.[BiometricScreenDate]) > 0
	                                   AND LEN (b.[SystolicBP]) > 0
	                                   AND LEN (b.[DiastolicBP]) > 0
	                                   AND LEN (b.[HeightInches]) > 0
	                                   AND LEN (b.[Weight]) > 0
                                       AND LEN (b.[BMI]) > 0
                                       AND LEN (b.[WaistInches]) > 0
                                       AND LEN (b.[AroundWrist]) > 0
                                       AND LEN (b.[HipsInches]) > 0
	                                   AND (LEN (b.[LabDate]) = 0
                                            OR LEN (b.[Chol]) = 0
	                                        OR LEN (b.[HDL]) = 0
                                            OR LEN (b.[TCOverHDL]) = 0
                                            OR LEN (b.[LDL]) = 0
	                                        OR LEN (b.[Triglycerides]) = 0
                                            OR LEN (b.[FastingBloodGlucoseMGOverDL]) = 0
                                            OR LEN (b.[GGTIUOverL]) = 0
                                            OR LEN (b.[HemoglobinA1C]) = 0);
      
    -- Insert into DailyReportPastApptScheduleEntriesWithNoLabs
    INSERT INTO [DS_SummitLife].[dbo].[DailyReportPastApptScheduleEntriesWithNoLabs]
	                                                                                 (
                                                                                        [EventLocation]
                                                                                        ,[EventTimestamp]
                                                                                        ,[AppointmentStartTimestamp]
                                                                                        ,[AppointmentEndTimestamp]
                                                                                        ,[FirstName]
                                                                                        ,[LastName]
                                                                                        ,[Email]
                                                                                        ,[EmployeeID]
                                                                                        ,[SSN]
                                                                                        ,[DOB]
                                                                                        ,[Location]
                                                                                        ,[Department]
                                                                                        ,[PatientID]
                                                                                        ,[SystolicBP]
                                                                                        ,[DiastolicBP]
                                                                                        ,[HeightInches]
                                                                                        ,[Weight]
                                                                                        ,[BMI]
                                                                                        ,[WaistInches]
                                                                                        ,[AroundWrist]
                                                                                        ,[HipsInches]
                                                                                        ,[IsPregnant]
                                                                                        ,[BiometricScreenDate]
                                                                                        ,[Status]
                                                                                        ,[PhysicianFormFilledOut]
                                                                                        ,[DataGatheredOnTimestamp]
                                                                                     )	
		SELECT
	    s.[EventLocation] AS [EventLocation]
		,s.[EventTimestamp] AS [EventTimestamp]
		,s.[AppointmentStartTimestamp] AS [AppointmentStartTimestamp]
	    ,s.[AppointmentEndTimestamp] AS [AppointmentEndTimestamp]
	    ,e.[FirstName] AS [FirstName]
	    ,e.[LastName] AS [LastName]
		,e.[EmployeeEmail] AS [Email]
		,e.[EmployeeNumber] AS [EmployeeID]
		,e.[Ssn] AS [SSN]
	    ,CONVERT([varchar] (10), e.[BirthDate], 101) AS [DOB]
		,e.[Location] AS [Location]
	    ,s.[Department] AS [Department]
		,b.[PatientID] AS [PatientID]
		,b.[SystolicBP]  AS [SystolicBP]
		,b.[DiastolicBP]  AS [DiastolicBP]
		,b.[HeightInches]  AS [HeightInches]
		,b.[Weight]  AS [Weight]
		,b.[BMI] AS [BMI]
		,b.[WaistInches]  AS [WaistInches]
		,b.[AroundWrist]  AS [AroundWrist]
		,b.[HipsInches]  AS [HipsInches]
		,b.[IsPregnant]  AS [IsPregnant]
		,CONVERT([varchar] (10), b.[BiometricScreenDate], 101)  AS [BiometricScreenDate]
		,'Missing Labs from Scheduled Appt' AS [Status]
        ,'' AS [PhysicianFormFilledOut]
		,CONVERT([nvarchar] (50), GETDATE(),121) AS [DataGatheredOnTimestamp]
    FROM [DS_SummitLife].[dbo].[SummitLifeEmployeeBiometricsAppointmentSchedule8_Appt] s
	JOIN [DS_SummitLife].[dbo].[CombineLabAndBiometrics] b
	ON b.[EmployeeNumber] = s.[id]
    JOIN [DS_SummitLife].[dbo].[SL_AllEmployees] e
	ON e.[EmployeeNumber] = b.[EmployeeNumber]
    WHERE DATEPART(year, s.[AppointmentStartTimestamp]) = @CurrentYear
	AND s.[AppointmentStartTimestamp] < @CurrentTimeStamp 
	AND DATEPART(year, CONVERT([datetime],b.[BiometricScreenDate], 101)) = @CurrentYear
	AND CONVERT([datetime],b.[BiometricScreenDate], 101) > s.[AppointmentStartTimestamp]
	AND LEN (b.[BiometricScreenDate]) > 0
	AND LEN (b.[SystolicBP]) > 0
	AND LEN (b.[DiastolicBP]) > 0
	AND LEN (b.[HeightInches]) > 0
	AND LEN (b.[Weight]) > 0
    AND LEN (b.[BMI]) > 0
    AND LEN (b.[WaistInches]) > 0
    AND LEN (b.[AroundWrist]) > 0
    AND LEN (b.[HipsInches]) > 0
	AND (LEN (b.[LabDate]) = 0
         OR LEN (b.[Chol]) = 0
	     OR LEN (b.[HDL]) = 0
         OR LEN (b.[TCOverHDL]) = 0
         OR LEN (b.[LDL]) = 0
	     OR LEN (b.[Triglycerides]) = 0
         OR LEN (b.[FastingBloodGlucoseMGOverDL]) = 0
         OR LEN (b.[GGTIUOverL]) = 0
         OR LEN (b.[HemoglobinA1C]) = 0);
         
    SET @ActualRecordCount = @@ROWCOUNT
    EXEC Admin.Utilities.logs.di_Batch @BatchOutID OUTPUT,  @BatchOutID, 'DetailEnd', NULL, NULL, NULL, @AnticipatedRecordCount, @ActualRecordCount
----------------------------------------------------------------------------------------------------------------------------------------------------

--  Close batch
    EXEC Admin.Utilities.logs.di_batch @BatchOutID OUTPUT, @BatchOutID, 'BatchEnd'
END TRY

BEGIN CATCH
DECLARE @Err              int
     ,  @ErrorMessage     varchar(Max)
     ,  @ErrorLine        varchar(128)
     ,  @Workstation      varchar(128) = @Application
     ,  @Procedure        VARCHAR(500)

    IF ERROR_NUMBER() IS NULL 
      SET @Err =0;
    ELSE
      SET @Err = ERROR_NUMBER();

    SET @ErrorMessage = ERROR_MESSAGE()
   
    SET @Procedure    = @@SERVERNAME + '.' + DB_NAME() + '.' + OBJECT_SCHEMA_NAME(@@ProcID) + '.' + OBJECT_NAME(@@ProcID) + ' - ' + @ErrorLine + ' - ' + LEFT(@BatchDetailDescription, 7)
    EXEC Admin.Utilities.administration.di_ErrorLog  @Application ,@Process, @Version ,0, @ErrorMessage, @Procedure,  @User , @Workstation

    SET @BatchMessage = 'Process Failed:  ' +  @ErrorMessage
    EXEC Admin.Utilities.logs.di_batch @BatchOutID OUTPUT, @BatchOutID, 'BatchEnd', @BatchMessage
	
    RAISERROR(@ErrorMessage, 16,1)

END CATCH


END